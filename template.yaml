AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sns-publisher-rnd

  Sample SAM Template for sns-publisher-rnd

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 20
    Runtime: java11
    Architectures:
      - x86_64
    MemorySize: 512
    
Resources:
  SNSPublisherFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: SNSPublisherFunction
      CodeUri: sns-lambda-gateway-demo
      Handler: com.traicloudtech.sns.publisher.SNSPublisher::handleRequest
      Policies:
        - SNSPublishMessagePolicy:
            TopicName: !Ref SNSTopic
        - AmazonSNSFullAccess
      Environment:
        Variables:
          TOPIC_ARN: !Ref SNSTopic
      Events:
        SNSPublisherAPI:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
#          Name: SNSPublisherAPI
          Properties:           
            Path: /publish
            Method: post
  SNSProcessorFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: SNSProcessorFunction
      CodeUri: sns-lambda-gateway-demo
      Handler: com.traicloudtech.sns.subscriber.SnSProcessor::handleRequest
  SNSProcessorFunctionAlias:
    Type: AWS::Lambda::Alias
    Properties:
      FunctionName: !Ref SNSProcessorFunction
      FunctionVersion: '$LATEST'
      Name: live
  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: trai-demo-topic
      DisplayName: A topic for RnD
      Subscription:
        - Protocol: lambda
          Endpoint: !GetAtt SNSProcessorFunction.Arn
  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn:  !Ref SNSTopic
      FunctionName: !Ref SNSProcessorFunctionAlias
  LambdaFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt SNSProcessorFunction.Arn
      Principal: sns.amazonaws.com
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  SNSPublisherApi:
    Description: "API Gateway endpoint URL for Prod stage for SNSPublisher function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/publish"
  SNSPublisherFunction:
    Description: "SNSPublisher Lambda Function ARN"
    Value: !GetAtt SNSPublisherFunction.Arn
  SNSPublisherFunctionIamRole:
    Description: "Implicit IAM Role created for SNSPublisher function"
    Value: !GetAtt SNSPublisherFunctionRole.Arn
